default_install_hook_types: ["pre-commit", "pre-push"]
default_stages: [pre-commit]

exclude: >
  (?x)(
      LICENSE.md$|
      \.snap$|
      \.map$|
      \.map\.js$|
      ^src/sentry/static/sentry/vendor/|
      ^src/.*/locale/|
      ^src/sentry/data/
  )

repos:
  # Many of these hooks are local because people use a variety of IDEs
  # with autoformatters that need to call out to things like `ruff` directly.
  # pre-commit run is not the same, and something like pre-commit exec does
  # not exist yet.
  - repo: local
    hooks:
      - id: pyupgrade
        name: pyupgrade
        entry: pyupgrade
        args: ["--py313-plus"]
        language: system
        types: [python]
      # Configuration for ruff exists in pyproject.toml,
      # but we let pre-commit take care of the file filtering.
      - id: ruff
        name: ruff
        entry: ruff format
        language: system
        types_or: [python, pyi]
        require_serial: true
      - id: mypy
        name: mypy
        entry: bash -c 'if [ -n "${SENTRY_MYPY_PRE_PUSH:-}" ]; then exec mypy "$@"; fi' --
        language: system
        stages: [pre-push]
        types: [python]
        require_serial: true
      # TODO(keeakita): what is this?
      # - id: lint-requirements
      #   name: lint-requirements
      #   entry: python -m tools.lint_requirements
      #   language: python
      #   files: (^|/)uv\.lock$
      - id: check-mypy-bypass
        name: do not bypass the type checker
        entry: '(^# *mypy: *ignore-errors|^# *type: *ignore|\bno_type_check\b|ignore\[import-untyped\])'
        language: pygrep
        types: [python]
      - id: prevent-push
        name: prevent pushing master
        stages: [pre-push]
        entry: bash -c 'test "$PRE_COMMIT_REMOTE_BRANCH" != "refs/heads/master"'
        always_run: true
        pass_filenames: false
        language: system

      # Javascript linting, formatting.
      # We're using the local node_modules to simplify things, otherwise would
      # need an easy way to keep versions in sync. Furthermore some repositories
      # are either not on pre-commit mirrors or are missing some tagged versions.
      # pre-commit-managed nodeenv environments also do not work out of the box because
      # additional_dependencies does not install a flattened dependency tree which is needed by,
      # for example, our eslint setup.

      - id: eslint
        name: eslint
        language: system
        files: \.(ts|js|tsx|jsx|mjs)$
        entry: bash -c 'cd frontend && bun run eslint --quiet --fix'

      # TODO(keeakita): figure out why this isn't working
      # - id: stylelint
      #   name: stylelint
      #   language: system
      #   files: \.[jt]sx?$
      #   entry: bash -c 'cd frontend && bun run stylelint --quiet'

      - id: prettier
        name: prettier
        language: system
        files: ^frontend/.*\.(ts|tsx|js|jsx|css|json|md|yaml|yml)$
        entry: bash -c 'cd frontend && bun run format'
        pass_filenames: false

      - id: knip
        name: knip
        language: system
        files: \.(ts|js|tsx|jsx|mjs)$
        pass_filenames: false
        stages: [pre-push]
        entry: bash -c 'if [ -n "${SENTRY_KNIP_PRE_PUSH:-}" ]; then exec ./node_modules/.bin/knip; fi' --

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-use-type-annotations
      - id: python-check-blanket-type-ignore

  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.29.3
    hooks:
      - id: check-github-actions
      - id: check-github-workflows
        args: [--verbose]

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-yaml
      - id: end-of-file-fixer
        exclude_types: [svg]
        exclude: ^fixtures/
      - id: trailing-whitespace
        exclude_types: [svg]
        exclude: ^(fixtures/|scripts/patches/)
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]

  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        types: [file]
        files: ^\.envrc$
        args: [--external-sources]
